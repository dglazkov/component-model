interface ElementRegistry {
    void registerElement(in String ancestorTagName, in String tagName, ElementPrototype elementPrototype);
}

[Supplemental]
interface Document : ElementRegistry {
}

[Duck]
interface ElementPrototype {
    void createShadowSubtree(in ShadowScope shadowScope);
}

interface ShadowScope {
    attribute bool applyAuthorSheets;
    attribute bool allowSelectorsThrough;

    // FIXME: Potentially a fragment-like thingy that can host multiple children?
    attribute Node root;

    void watchAttribute(in String attributeName, in AttributeWatchHandler handler, in bool usesDirtyBit);
    void forwardAttribute(in String attributeName, in DOMElement element, optional in String newAttributeName);
    void forwardPseudoElement(in String pseudoElement, in String destinationSelector);
    void forwardStyleProperty(in String propertyName, in String destinationSelector, optional in String newPropertyName);
    void forwardChildren(in String sourceSelector, in String destinationSelector);
}
